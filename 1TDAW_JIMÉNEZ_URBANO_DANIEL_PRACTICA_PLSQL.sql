CREATE TABLE restaurante 
(
    codires NUMERIC(5) GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOT NULL ENABLE PRIMARY KEY,
    nombre VARCHAR2(50),
    direccion VARCHAR2(80),
    horariosem CLOB,
    localidades CLOB NOT NULL
);

CREATE TABLE categoria
(
    codcategor NUMERIC(2) GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOT NULL ENABLE PRIMARY KEY,
    numcategor VARCHAR2(20) NOT NULL UNIQUE
);

CREATE TABLE platos
(   
    codipla NUMERIC(5) GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOT NULL ENABLE PRIMARY KEY,
    nombreplato VARCHAR2(60) NOT NULL,
    descriplato VARCHAR2(100),
    precio NUMERIC(5,2) NOT NULL,
    categoriapla NUMERIC(2) NOT NULL,
    
    CONSTRAINT fk_categoria_pla FOREIGN KEY (categoriapla) REFERENCES categoria(codcategor)
);

CREATE TABLE carta
(
    cartarest NUMERIC(5),
    cartaplat NUMERIC(5),
    
    CONSTRAINT pk_carta PRIMARY KEY (cartarest, cartaplat),
    CONSTRAINT fk_carta_rest FOREIGN KEY (cartarest) REFERENCES restaurante(codires),
    CONSTRAINT fk_carta_plat FOREIGN KEY (cartaplat) REFERENCES platos(codipla)
);

CREATE TABLE direccion
(
    codirec NUMERIC(5) GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOT NULL ENABLE PRIMARY KEY,
    calle VARCHAR2(50) NOT NULL,
    numero NUMERIC(3) NOT NULL,
    piso VARCHAR2(5),
    localidad VARCHAR2(50) NOT NULL,
    codipostal NUMERIC(5) NOT NULL
);

CREATE TABLE clientes
(
    dni VARCHAR2(9) PRIMARY KEY,
    nombrecli VARCHAR2(50) NOT NULL,
    apellidos VARCHAR2(50) NOT NULL,
    direcclie NUMERIC(5),
    usuario VARCHAR2(50) NOT NULL,
    clave VARCHAR2(50) NOT NULL,
    telef NUMERIC(10) NOT NULL,
    
    CONSTRAINT fk_direc_clie FOREIGN KEY (direcclie) REFERENCES direccion(codirec)
);

CREATE TABLE pedidos (
    codipedido NUMERIC(10) GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOT NULL ENABLE PRIMARY KEY,
    dniclien VARCHAR2(9) NOT NULL,
    fechapedi DATE NOT NULL,
    fechaentre DATE,
    estado VARCHAR2(10) CHECK (estado IN ('REST', 'CANCEL', 'RUTA', 'ENTREGADO', 'RECHAZADO')),
    importotal NUMERIC(10,2),
    codicupon VARCHAR2(10),
    
    CONSTRAINT fk_pedido_cliente FOREIGN KEY (dniclien) REFERENCES clientes(dni)
);

CREATE TABLE tiene 
(
    codipedido NUMERIC(10) NOT NULL,
    codipla NUMERIC(5) NOT NULL,
    cantidad NUMERIC(3) NOT NULL,
    comision NUMERIC(5,2) NOT NULL,
    
    CONSTRAINT pk_tiene PRIMARY KEY (codipedido, codipla),
    CONSTRAINT fk_contiene_pedido FOREIGN KEY (codipedido) REFERENCES pedidos(codipedido),
    CONSTRAINT fk_contiene_plato FOREIGN KEY (codipla) REFERENCES platos(codipla)
);

CREATE TABLE cupones
(
    codcupon VARCHAR2(10) PRIMARY KEY,
    fechacaduc DATE NOT NULL,
    descuento NUMERIC(5,2) CHECK (descuento BETWEEN 0 AND 100)
);


--CATEGOR√çA
INSERT INTO categoria (codcategor, numcategor) VALUES (1, 'Ensaladas');
INSERT INTO categoria (codcategor, numcategor) VALUES (2, 'Platos principales');
INSERT INTO categoria (codcategor, numcategor) VALUES (3, 'Postres');

--DIRECCION
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(1,'Calle Mayor', 10, '3A', 'Madrid', 28013);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(2,'Avenida Andalucia', 45, NULL, 'Sevilla', 41010);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(3,'Gran Via', 13, '2B', 'Barcelona', 08010);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(4,'Calle Reina Sofia', 6, NULL, 'Granada', 18630);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(5,'Calle Keops', 25, '4C', 'Madrid', 17625);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(6,'Avenida Malaga', 1, NULL, 'La Rioja', 21300);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(7,'Puerta del Sol', 37, '1A', 'Girona', 09267);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(8,'Calle Huertas', 23, '5C', 'Granada', 28772);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(9,'Avenida de la Albufera', 67, '4B', 'Alicante', 16382);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(10,'Calle Mayor', 2, NULL, 'Jaen', 01292);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(11,'Avenida de America', 30, '2A', 'Badajoz', 92300);
INSERT INTO direccion (codirec, calle, numero, piso, localidad, codipostal) VALUES(12,'Calle Granada', 29, NULL, 'Murcia', 48065);

--RESTAURANTE
INSERT INTO restaurante (codires, nombre, direccion, horariosem, localidades) VALUES (1, 'Don Pepe', 'Calle Mayor 10, Madrid', 'Lunes a Domingo: 12:00-23:00', 'Madrid, Barajas');
INSERT INTO restaurante (codires, nombre, direccion, horariosem, localidades) VALUES (2, 'Bar Paco', 'Calle Reina Sofia 6, Granada', 'Miercoles a Domingo: 13:00-22:00', 'Granada, Alhendin');
INSERT INTO restaurante (codires, nombre, direccion, horariosem, localidades) VALUES (3, 'Restaurante Manolo', 'Puerta del Sol 37, Girona', 'Lunes a Sabado: 12:00-23:30', 'Girona, Lloret de mar');
INSERT INTO restaurante (codires, nombre, direccion, horariosem, localidades) VALUES (4, 'Camino de Santiago', 'Avda. de la Albufera 67, Alicante', 'Jueves a Domingo: 13:00-22:00', 'Alicante, Orihuela');
INSERT INTO restaurante (codires, nombre, direccion, horariosem, localidades) VALUES (5, 'Repica', 'Gran Via 13, Barcelona', 'Martes a Domingo: 14:00-23:00', 'Barcelona, Badalona');

--PLATOS
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(1,'Ensalada Cesar', 'Lechuga, Pollo, Salsa Cesar', 8.50, 1);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(2,'Pizza Margarita', 'Tomate, queso mozzarella, albahaca', 12.00, 2);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(3,'Tarta de queso', 'Tarta de queso casera', 6.00, 3);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(4,'Callos', 'Ternera, Chorizo, Panceta, Guindilla, Morcilla, Laurel', 10.00, 3);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(5,'Rosca de Lomo', 'Huevo, Lechuga, Tomate, Lomo, Pimientos Verdes', 11.00, 2);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(6,'Pollo a la brasa', 'Pollo de Corral', 13.50, 1);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(7,'Almejas a la Marinera', 'Almejas, Ajo', 11.50, 3);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(8,'Tarta de Pistacho', 'Tarta de pistacho casera', 6.50, 1);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(9,'Hamburguesa Completa', 'Hamburguesa con lechuga, tomate y queso', 7.00, 2);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(10,'Calamares', 'Calamares Fritos', 12.00, 3);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(11,'Pulpo a la Brasa', 'Pata de pulpo', 18.00, 2);
INSERT INTO platos (codipla, nombreplato, descriplato, precio, categoriapla) VALUES(12,'Redondo de Ternera', 'Cebolla, Ternera, Laurel, Champinones, Zanahoria', 13.00, 1);

--CUPONES
INSERT INTO cupones (codcupon, fechacaduc, descuento) VALUES ('PRIMER10', '2025-12-31', 10.00);
INSERT INTO cupones (codcupon, fechacaduc, descuento) VALUES ('ENVIOGRATIS', '2025-07-31', 100.00);
INSERT INTO cupones (codcupon, fechacaduc, descuento) VALUES ('CENA2X1', '2025-05-15', 50.00);
INSERT INTO cupones (codcupon, fechacaduc, descuento) VALUES ('FINDESABOR', '2025-08-30', 20.00);
INSERT INTO cupones (codcupon, fechacaduc, descuento) VALUES ('REBAJA5', '2025-06-15', 5.00);

--CLIENTES
INSERT INTO clientes (dni, nombrecli, apellidos, direcclie, usuario, clave, telef) VALUES ('12345678A', 'Ana', 'Lopez Garcia', 1, 'analopez', 'clave123', 612345678);
INSERT INTO clientes (dni, nombrecli, apellidos, direcclie, usuario, clave, telef) VALUES ('23456789B', 'Carlos', 'Martin Perez', 2, 'cmartin', 'segura456', 622345679);
INSERT INTO clientes (dni, nombrecli, apellidos, direcclie, usuario, clave, telef) VALUES ('34567890C', 'Lucia', 'Fernandez Ruiz', 3, 'luciafr', 'password789', 632345680);
INSERT INTO clientes (dni, nombrecli, apellidos, direcclie, usuario, clave, telef) VALUES ('45678901D', 'Laura', 'Gomez Torres', 4, 'lauragt', 'pass789', 645678901);
INSERT INTO clientes (dni, nombrecli, apellidos, direcclie, usuario, clave, telef) VALUES ('75575532Q', 'David', 'Ruiz Alba', 5, 'davidruiz', 'clave123', 656789012);

--CARTA
INSERT INTO carta (cartarest, cartaplat) VALUES (1, 1);
INSERT INTO carta (cartarest, cartaplat) VALUES (1, 2);
INSERT INTO carta (cartarest, cartaplat) VALUES (2, 3);
INSERT INTO carta (cartarest, cartaplat) VALUES (3, 4);
INSERT INTO carta (cartarest, cartaplat) VALUES (4, 5);

--PEDIDOS
INSERT INTO pedidos (codipedido, dniclien, fechapedi, fechaentre, estado, importotal, codicupon) VALUES (1, '12345678A', '2025-04-01', '2025-04-01', 'ENTREGADO', 20.00, 'PRIMER10');
INSERT INTO pedidos (codipedido, dniclien, fechapedi, fechaentre, estado, importotal, codicupon) VALUES (2, '23456789B','2025-04-02','2025-04-02', 'ENTREGADO', 15.00, 'ENVIOGRATIS');
INSERT INTO pedidos (codipedido, dniclien, fechapedi, fechaentre, estado, importotal, codicupon) VALUES (3, '34567890C', '2025-04-03', NULL, 'RUTA', 18.50, NULL);
INSERT INTO pedidos (codipedido, dniclien, fechapedi, fechaentre, estado, importotal, codicupon) VALUES (4, '45678901D', '2025-04-06', '2025-04-06', 'ENTREGADO', 26.00, NULL);
INSERT INTO pedidos (codipedido, dniclien, fechapedi, fechaentre, estado, importotal, codicupon) VALUES (5, '75575532Q', '2025-04-07', NULL, 'RUTA', 15.50, 'CENA2X1');

--TIENE
INSERT INTO tiene (codipedido, codipla, cantidad, comision) VALUES (1, 1, 1, 0.50);
INSERT INTO tiene (codipedido, codipla, cantidad, comision) VALUES (2, 2, 1, 0.80);
INSERT INTO tiene (codipedido, codipla, cantidad, comision) VALUES (3, 3, 2, 0.40);
INSERT INTO tiene (codipedido, codipla, cantidad, comision) VALUES (4, 4, 1, 0.60);
INSERT INTO tiene (codipedido, codipla, cantidad, comision) VALUES (5, 5, 3, 0.25);

--PROGRAMAS EN PL/SQL
--PROCEDIMIENTO1

ACCEPT dni PROMPT 'Introduce el DNI del cliente: ';

DECLARE
    dni clientes.dni%TYPE := '&dni';
    nombrecli clientes.nombrecli%TYPE;
    apellidos clientes.apellidos%TYPE;
    usuario clientes.usuario%TYPE;
    telef clientes.telef%TYPE;
    
    calle direccion.calle%TYPE;
    numero direccion.numero%TYPE;
    piso direccion.piso%TYPE;
    localidad direccion.localidad%TYPE;
    codipostal direccion.codipostal%TYPE;
    
    sumaimportes NUMBER := 0;
    contador NUMBER := 0;
    nopedidos EXCEPTION;
    
BEGIN
    SELECT c.nombrecli, c.apellidos, c.usuario, c.telef,
           d.calle, d.numero, d.piso, d.localidad, d.codipostal
    INTO nombrecli, apellidos, usuario, telef,
         calle, numero, piso, localidad, codipostal
    FROM clientes c
    JOIN direccion d ON c.direcclie = d.codirec
    WHERE c.dni = dni;
    
    DBMS_OUTPUT.PUT_LINE('DNI: ' || dni);
    DBMS_OUTPUT.PUT_LINE('Nombre: ' || nombrecli || ' ' || apellidos);
    DBMS_OUTPUT.PUT_LINE('Usuario: ' || usuario);
    DBMS_OUTPUT.PUT_LINE('Tel√©fono: ' || telef);
    DBMS_OUTPUT.PUT_LINE('Direcci√≥n: ' || calle || ' ' || numero || 
                        CASE WHEN piso IS NOT NULL THEN ', ' || piso ELSE '' END ||
                        ', ' || localidad || ' (' || codipostal || ')');
    
    DBMS_OUTPUT.PUT_LINE('C√≥digo  Fecha Pedido  Fecha Entrega  Estado  Importe');

    FOR pedido IN (SELECT codipedido, fechapedi, fechaentre, estado, importotal
                  FROM pedidos
                  WHERE dniclien = dni
                  ORDER BY fechapedi) LOOP
        contador := contador + 1;
        sumaimportes := sumaimportes + pedido.importotal;

        DBMS_OUTPUT.PUT_LINE(
            pedido.codipedido || '  ' ||
            TO_CHAR(pedido.fechapedi, 'DD/MM/YYYY') || '  ' ||
            CASE WHEN pedido.fechaentre IS NULL THEN 'Pendiente' 
                 ELSE TO_CHAR(pedido.fechaentre, 'DD/MM/YYYY') END || '  ' ||
            pedido.estado || '  ' ||
            pedido.importotal || ' ‚Ç¨'
        );
    END LOOP;
    IF contador = 0 THEN
        RAISE nopedidos;
    END IF;
    DBMS_OUTPUT.PUT_LINE('TOTAL: ' || sumaimportes || ' ‚Ç¨');
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No existe ning√∫n cliente con el DNI ' || v_dni);
    WHEN no_hay_pedidos THEN
        DBMS_OUTPUT.PUT_LINE('El cliente no tiene pedidos registrados');
END;


--PROCEDIMIENTO2

modificacionespedidos NUMBER := 0;
importecalculado NUMBER;
    
BEGIN
    FOR pedido IN (SELECT p.codipedido, p.importotal
                  FROM pedidos p) LOOP
        
        SELECT NVL(SUM((pl.precio + t.comision) * t.cantidad), 0)
        INTO importecalculado
        FROM tiene t
        JOIN platos pl ON t.codipla = pl.codipla
        WHERE t.codipedido = pedido.codipedido;
        
        IF pedido.importotal != importecalculado THEN
            UPDATE pedidos 
            SET importotal = importecalculado
            WHERE codipedido = pedido.codipedido;
            
            modificacionespedidos := modificacionespedidos + 1;
        END IF;
    END LOOP;
    
    IF modificacionespedidos = 0 THEN
        DBMS_OUTPUT.PUT_LINE('Sin cambios en el pedido');
    ELSE
        DBMS_OUTPUT.PUT_LINE('Cambios ' || modificacionespedidos || ' filas en la tabla PEDIDOS');
END comprobarconsistenciapedidos;